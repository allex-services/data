!function(a,b,c){a.factory("allex.data.sinkFactory",[function(){function a(a){f.call(this),a||(a={}),this.sinkPath=null,this.sinkData=null,this.user=a.user,this._mgl=null,this.recordDescriptorTranslator=a.recordDescriptorTranslator||b.dummyFunc,this._onUpdateCB=a.onUpdate||b.dummyFunc,this.config=a,this._user_state_l=this.user.attachListener("state",this._onUserStateChanged.bind(this))}function d(b){a.call(this,b)}function e(b){a.call(this,b),this.propertyhash=b.propertyhash,this._dataCbs=b.dataCallBacks}var f=b.CLDestroyable,g=c.execSuite.taskRegistry;return b.inherit(a,f),a.prototype.__cleanUp=function(){this.config=null,this._user_state_l&&this._user_state_l.destroy(),this._user_state_l=null,this._mgl&&this._mgl.destroy(),this._mgl=null,this.user=null,this.sinkData=null,this.sinkPath=null,this._onUpdateCB=null,this.recordDescriptorTranslator=null,f.prototype.__cleanUp.call(this)},a.prototype._onUserStateChanged=function(a){this._createSink()},a.prototype.set_sinkPath=function(a){this.sinkPath=a,this._createSink()},a.prototype.set_sinkRepresentation=function(a){this._mgl&&this._mgl.destroy(),this._mgl=null,a&&(this.set("sinkData",a.data),this._mgl=a.monitorDataForGui(this._onUpdateCB),this.recordDescriptorTranslator(a.sink.recordDescriptor)),this._onUpdateCB()},b.inherit(d,a),d.prototype.__cleanUp=function(){a.prototype.__cleanUp.call(this)},d.prototype._createSink=function(){var a=this.get("sinkPath");a?this.set("sinkRepresentation",this.get("user").getSubSink(a)||null):this.set("sinkRepresentation",null)},b.inherit(e,a),e.prototype.__cleanUp=function(){this._dataCbs=null,this.propertyhash=null,a.prototype.__cleanUp.call(this)},e.prototype._createSink=function(){var a=this.get("sinkPath");a&&this.get("user").execute("askForRemote",a).done(this._doConnect.bind(this),this._remoteFailed.bind(this))},e.prototype._remoteFailed=function(){},e.prototype._doConnect=function(){g.run("acquireSubSinks",{state:g.run("materializeState",{sink:this.get("user").get("user_sink")}),subinits:[{name:this.get("sinkPath"),identity:{role:this.get("user").get("role")},propertyhash:this.get("propertyhash")||{},cb:this.set.bind(this,"sinkRepresentation")}]})},e.prototype.set_sinkRepresentation=function(b){if(b){var c=this.config;g.run("materializeData",{sink:b.sink,data:this.sinkData,onInitiated:c.onInitiated,onRecordCreation:c.onRecordCreation,onDelete:c.onDelete,onNewRecord:c.onNewRecord,onRecordDeletion:c.onRecordDeletion,onUpdate:c.onUpdate,onRecordUpdate:c.onRecordUpdate})}a.prototype.set_sinkRepresentation.call(this,b)},function(a,b){if("dynamic"!==a&&"static"!==a)throw new Error("Unknown sink type: "+a);return"dynamic"===a?new e(b):new d(b)}}]),a.factory("allex.data.ViewSetUp",[function(){return function(a,b){if(!a)throw new Error("No sink given");if(!b)throw new Error("No view given");if(!ALLEX_CONFIGURATION.VIEWS[a])throw new Error("No view configuration for sink "+a);if(!ALLEX_CONFIGURATION.VIEWS[a][b])throw new Error("No view configuration for sink "+b);return{sink_type:ALLEX_CONFIGURATION.VIEWS[a].sink_type,view:ALLEX_CONFIGURATION.VIEWS[a][b]}}}])}(angular.module("allex.data",["allex.lib","ui.grid","ui.grid.autoResize"]),ALLEX.lib,ALLEX),function(a,b,c){a.directive("allexDataView",["$parse","allex.lib.UserDependentMixIn",function(a,c){function d(a){b.BasicController.call(this,a),c.call(this,a),this.el=null,this.config=null,this.name=null,this.sink_name=null,this.data=null,this.viewType=null,this._monitorForGui=null}return b.inherit(d,b.BasicController),c.addMethods(d),d.prototype.__cleanUp=function(){this._monitorForGui&&this._monitorForGui.destroy(),this._monitorForGui=null,this.sink_name=null,this.name=null,this.el=null,this.config=null,this.data=null,this.viewType=null,c.prototype.__cleanUp.call(this),b.BasicController.prototype.__cleanUp.call(this)},d.prototype._fetchSink=function(){var a=this.get("user");this.get("sink_name")&&"loggedin"===a.get("state")&&this.set("sinkRepresentation",this.get("user").getSubSink(this.sink_name))},d.prototype.set_sinkRepresentation=function(a){this._monitorForGui&&this._monitorForGui.destroy(),this._monitorForGui=null,a&&(this.set("data",a.data),this._monitorForGui=a.monitorDataForGui(this._updateCB.bind(this)),this.set("recordDescriptor",a.sink.recordDescriptor))},d.prototype.set_recordDescriptor=function(a){},d.prototype._updateCB=function(){this.$apply()},d.prototype.set_userState=function(a){c.prototype.set_userState.call(this,a),this._fetchSink()},d.prototype.set_sink_name=function(a){this.sink_name=a,this._fetchSink()},d.prototype.configure=function(a){if(!ALLEX_CONFIGURATION.VIEWS)throw new Error("No views configuration");if(!ALLEX_CONFIGURATION.VIEWS[a.sink])throw new Error("No view configuration for sink "+a.sink);if(!ALLEX_CONFIGURATION.VIEWS[a.sink][a.name])throw new Error("No view configuration for view "+a.name);var b=ALLEX_CONFIGURATION.VIEWS[a.sink][a.name];this.set("viewType",b.view),this.set("config",b.config),this.name=b.name,this.set("sink_name",a.sink)},{restrict:"E",replace:!0,scope:!0,templateUrl:"partials/allex_dataservice/partials/dataview.html",controller:d,link:function(b,c,d){b._ctrl.set("el",c),b._ctrl.configure(a(d.config)(b))}}}]),a.directive("allexDataSetitem",["$parse",function(a){return{restrict:"A",scope:!1,link:function(b,c,d){b._ctrl.set("item",a(d.allexDataSetitem)(b))}}}])}(angular.module("allex.data"),ALLEX.lib,ALLEX),function(a,b,c){a.factory("allex.data.GridMixIn",["$compile",function(a){function c(a,b,c){c=c||{},this.gridOptions=angular.extend({},d,b),this.gridOptions.data=c.dataPath,this.renderer='<div class="grid_container" ui-grid="_ctrl.gridOptions"></div>',this.autoresize=c.autoresize||!0,this._ready=!1}var d={enableSorting:!1,minimumColumnSize:150};return c.prototype.__cleanUp=function(){this.renderer=null,this.autoresize=null,this.gridOptions=null,this._ready=null},c.addMethods=function(a){b.inheritMethods(a,c,"set_el","_doRender","set_record_descriptor","set_auto_resize","set_subsinksPath")},c.prototype.set_auto_resize=function(a){this.autoresize=a,this._doRender()},c.prototype.set_el=function(a){this.el=a,this._doRender()},c.prototype.set_record_descriptor=function(a){this._ready=!0,this._doRender()},c.prototype._doRender=function(){if(this._ready&&this.el){this.el.empty();var b=$(this.renderer);this.autoresize&&b.attr("ui-grid-auto-resize",""),this.el.append(b),a(this.el.contents())(this.scope)}},c}]),a.directive("allexDataGrid",[function(){return{restrict:"E",transclude:!0,replace:!0,template:'<div class="allexdatagrid"></div>',link:function(a,b){a._ctrl.set("el",b)}}}])}(angular.module("allex.data"),ALLEX.lib,ALLEX),function(a,b,c){a.factory("allex.data.TreeMixIn",["allex.data.DataMonitorMixIn",function(a){function c(b,c,e){this.treeConfig=angular.extend({},d,c),this.treeInstance=null,this.treeData=null,a.call(this,b,e)}var d={core:{multiple:!1,animation:!0,error:function(a){log.error("treeCtrl: error from js tree - "+angular.toJson(a))},check_callback:!0,worker:!0},types:{"default":{icon:"glyphicon glyphicon-flash"},star:{icon:"glyphicon glyphicon-star"},cloud:{icon:"glyphicon glyphicon-cloud"}},version:1,plugins:["types","checkbox"]};return c.prototype.__cleanUp=function(){this.treeConfig=null,this.treeInstance=null,this.treeData=null,a.prototype.__cleanUp.call(this)},c.addMethods=function(d){a.addMethods(d),b.inheritMethods(d,c,"_onTreeReady","_onTreeNodeCreated","_reprocessStructure")},c.prototype._onTreeReady=function(){},c.prototype._onTreeNodeCreated=function(){},c.prototype._reprocessStructure=function(){},c}]),a.directive("allexTree",function(){return{restrict:"E",replace:!0,template:'<div js-tree="_ctrl.treeConfig", ng-model="_ctrl.treeData" tree="_ctrl.treeInstance" tree-events="ready:_ctrl._onTreeReady; create_node:_ctrl._onTreeNodeCreated"></div>'}})}(angular.module("allex.data"),ALLEX.lib,ALLEX),function(a,b,c){c.execSuite.taskRegistry;a.factory("allex.data.Views",["allex.data.ViewSetUp","allex.AllexViewChild","allex.lib.UserDependentMixIn","allex.data.sinkFactory","allex.data.GridMixIn",function(a,c,d,e,f){function g(g){b.BasicController.call(this,g),c.call(this,g),d.call(this,g);var h=this.get("data");this.view_setup=a(h.sink,h.view),this.sink_wrapper=e(this.view_setup.sink_type,{user:this.get("user"),onUpdate:this._onUpdate.bind(this)}),f.call(this,g,this.view_setup.view.grid,this.view_setup.view.config),this.sink_wrapper.set("sinkPath",h.sink)}return b.inherit(g,b.BasicController),c.addMethods(g),d.addMethods(g),f.addMethods(g),g.prototype.__cleanUp=function(){this.sink_wrapper.destroy(),this.sink_wrapper=null,this.view_setup=null,d.prototype.__cleanUp.call(this),c.prototype.__cleanUp.call(this),f.prototype.__cleanUp.call(this),b.BasicController.prototype.__cleanUp.call(this)},g.prototype._onUpdate=function(){this.$apply(),console.log("AJ DA TE VIDIM ...")},{Table:g}}]),a.controller("allex.data.ViewsController",["$scope","allex.data.Views",function(a,b){new b.Table(a)}]),a.config(["allex.PageRouterProvider",function(a){a.router.setAlias("partials/allex_dataservice/partials/crudtableview.html","table_cruds")}])}(angular.module("allex.data"),ALLEX.lib,ALLEX),function(a,b,c){var d={no_item:"<strong>Items unavailable</strong>"};a.directive("allexDataList",["$compile",function(a){return{restrict:"E",scope:!1,transclude:!0,template:'<div class="allex_data_list"><div class="empty" data-ng-hide="_ctrl.data.length"></div><ul class="allex_data_list" data-ng-show="_ctrl.data.length"></ul></div>',replace:!0,link:function(b,c,e){var f=b._ctrl.get("config"),g="$litem in _ctrl.data";f.track&&(g+=" track by "+f.track),f.orderBy&&(g+=" | orderBy:'"+f.orderBy+"'"),f.limitTo;var h=f.item,i=$("<li>"+f.item.content+"</li>");i.attr({"data-ng-repeat":g}),i.attr(h.attrs),f.filter&&i.attr({"data-ng-if":f.filter}),f.list&&f.list.attrs&&c.find("ul").attr(f.list.attrs),c.find("ul").append(i),c.find("div.empty").append(f.empty?f.empty:d.no_item),a(c.contents())(b)}}}])}(angular.module("allex.data"),ALLEX.lib,ALLEX);