!function(a,b,c){}(angular.module("allex.data",["allex.lib","ui.grid","ui.grid.autoResize"]),ALLEX.lib,ALLEX),function(a,b,c){a.factory("allex.CRUDAHelpers",[function(){function a(a,b,c,d){if("create"===d)return!1;var e=d in a?a[d]:b[d];return e?"roles"in e?e.roles&&e.roles.length?e.roles.split(",").indexOf(c)>-1:!1:!0:!1}function b(b){var c=b.get("sinkConfiguration"),d=b.get("user"),e=b.get("recordDescriptor").primaryKey;return e&&c&&c.actions&&c.crud?(c.item_actions?c.item_actions:["edit","delete"]).filter(a.bind(null,c.crud,c.actions,d.get("role"))):null}function c(a,b,c,d){var e=d in c.crud?c.crud[d]:c.actions[d];return e?(e.widget?e.widget:a[d])||"":""}function d(a){var d=b(a);if(d&&d.length){var e=a.get("viewType"),f=ALLEX_CONFIGURATION.DEFAULT_VIEW_ACTION_WIDGETS[e];return f||console.warn("NO DEFAULTS FOR VIEW ACTIONS for type ",e),d.map(c.bind(null,f,e,a.get("sinkConfiguration"))).join("")}}function e(a,b){var c={required:!0};return a&&a[b.name]&&(c["default"]=a[b.name]),{schema:angular.extend({},b,c)}}function f(a,b,c){a[c.name]=e(b,c)}function g(a,b){var c={fields:{}};return a.fields.forEach(f.bind(null,c.fields,b)),c}return{itemActions:b,buildActionsWidget:d,buildFormDescriptor:g}}]),a.directive("allexDataView",["$parse","allex.lib.UserDependentMixIn","allex.Router",function(a,c,d){function e(a){b.BasicController.call(this,a),this.el=null,this.config=null,this.name=null,this.sink_name=null,this.data=null,this.viewType=null,this._monitorForGui=null,this._is_remote=null,this.recordDescriptor=null,this.crudable=null,this.actionable=null,c.call(this,a)}return b.inherit(e,b.BasicController),c.addMethods(e),e.prototype.__cleanUp=function(){this._forgetSink(),this.sink_name=null,this.name=null,this.el=null,this.config=null,this.data=null,this.viewType=null,this.recordDescriptor=null,this.crudable=null,this.actionable=null,c.prototype.__cleanUp.call(this),b.BasicController.prototype.__cleanUp.call(this)},e.prototype._fetchSink=function(){var a=this.get("user");this.get("sink_name")&&"loggedin"===a.get("state")&&this.set("sinkRepresentation",this.get("user").getSubSink(this.sink_name))},e.prototype._forgetSink=function(){this._is_remote,this._is_remote=null,this._monitorForGui&&this._monitorForGui.destroy(),this._monitorForGui=null},e.prototype.set_sinkRepresentation=function(a){this._forgetSink();var b=this.get("user");console.log(this.sink_name,a),a?(this._is_remote=b.isSinkRemote(this.sink_name),this._is_remote&&b.execute("askForRemote",this.sink_name).done(this._got_sinkReady.bind(this,a),this._failed.bind(this)),this._got_sinkReady(a)):(this.set("data",null),this.set("recordDescriptor",null))},e.prototype._failed=function(){console.log("DJE BA ZAPELO?",arguments)},e.prototype._got_sinkReady=function(a){this.set("data",a.data),this._monitorForGui=a.monitorDataForGui(this._updateCB.bind(this)),this.set("recordDescriptor",a.sink.recordDescriptor)},e.prototype.set_recordDescriptor=function(a){this.recordDescriptor=a},e.prototype._updateCB=function(){this.$apply()},e.prototype.set_userState=function(a){c.prototype.set_userState.call(this,a),this._fetchSink()},e.prototype.get_sinkConfiguration=function(){return ALLEX_CONFIGURATION&&ALLEX_CONFIGURATION.VIEWS?ALLEX_CONFIGURATION.VIEWS[this.get("sink_name")]:null},e.prototype.get_viewConfiguration=function(){var a=this.get("sinkConfiguration");return a?a[this.get("name")]:null},e.prototype.configure=function(a){this.set("sink_name",a.sink),this.set("name",a.name);var b=this.get("sinkConfiguration"),c=this.get("viewConfiguration");if(!b)throw new Error("No view configuration for sink "+a.sink);if(!c)throw new Error("No view configuration for view "+a.name);this.set("viewType",c.view),this.set("config",c.config),this.set("crudable",!!b.crud&&c.crud),this.set("actionable",!!b.actions&&c.actions),this._fetchSink()},e.prototype.isCRUDAllowed=function(a){var c=this.get("sinkConfiguration").crud;return c&&c[a]?b.isBoolean(c[a])?c[a]:c[a].roles?c[a].roles.split(",").indexOf(this.get("user").get("role"))>-1:!1:!1},e.prototype.getCRUDConfig=function(a){var c=this.get("sinkConfiguration").crud;return b.isBoolean(c[a])?null:c[a]},e.prototype._doAction=function(a,b,c){d.go(a,[b,c,this])},e.prototype._doEdit=function(a,b){var c=this.get("recordDescriptor");return c.primaryKey?void this._doAction(a,"edit",b):void d.go("dialog.error",[{content:"No primary key in record descriptor, can not edit"}])},e.prototype._doRemove=function(a){var b=this.get("recordDescriptor");return b.primaryKey?void d.go("dialog.singleConfirm",[{dialog:{content:"samo da te vidim.."}},this._doActualRemove.bind(this,a)]):void d.go("dialog.error",[{content:"No primary key in record descriptor, can not remove"}])},e.prototype._doActualRemove=function(a){var b=this.get("recordDescriptor"),c=b.primaryKey;this.get("user").getSubSink(this.get("sink_name")).sink.call("delete",{op:"eq",field:c,value:a[c]}).done(this._onRemoveSuccessfull.bind(this,c,a[c]),this._onRemoveFailed.bind(this,c,a[c]))},e.prototype._onRemoveSuccessfull=function(a,b){d.go("dialog.success",[{data:{primaryKey:a,value:b},content:"Record with key <strong>{{_ctrl.settings.data.primaryKey}}: {{_ctrl.settings.data.value}}</strong> was successfuly removed"}])},e.prototype._onRemoveFailed=function(a,b){d.go("dialog.error",[{data:{primaryKey:a,value:b},content:"Failed to remove record with key <strong>{{_ctrl.settings.data.primaryKey}}: {{_ctrl.settings.data.value}}</strong>"}])},{restrict:"E",replace:!0,scope:!0,templateUrl:"partials/allex_dataservice/partials/dataview.html",controller:e,link:function(b,c,d){b._ctrl.set("el",c),b._ctrl.configure(a(d.config)(b))}}}]),a.factory("allex.data.CreateNewItemControllerF",["allex.lib.form.WaitingUserModalTwoButtonForm","allex.CRUDAHelpers",function(a,c){function d(b,d,e){this.sink_name=e.sink_name,a.call(this,b,d,{settings:{dialog:{data:null,title:"Create new item: "+e.sink_name,"#content":"jsonform"},button_config:{buttons:{save:{cb:this._onCreate.bind(this,e.doCreate),visible:!1},cancel:{action:"close"}}}},form:c.buildFormDescriptor(e.recordDescriptor)})}return b.inherit(d,a),d.prototype.__cleanUp=function(){this.sink_name=null,a.prototype.__cleanUp.call(this)},d.prototype._onCreate=function(a){this.set("promise",this.get("user").getSubSink(this.get("sink_name")).sink.call("create",this.vals))},d}]),a.controller("allex.data.CreateNewItemController",["$scope","$modalInstance","settings","allex.data.CreateNewItemControllerF",function(a,b,c,d){new d(a,b,c)}]),a.directive("allexDataNew",["$compile","allex.Router","allex.dialog",function(a,c,d){function e(a){b.BasicController.call(this,a),this._parent=a.$parent._ctrl,this._ready=!1,this._config=null,this._rdl=this._parent.attachListener("recordDescriptor",this._onRecordDescriptor.bind(this)),this.label="Add new"}var f={label:"Add new",klass:"btn-default"};return b.inherit(e,b.BasicController),e.prototype.__cleanUp=function(){this._parent=null,this._ready=!1,this._config=null,this._rdl.destroy(),this._rdl=null,b.BasicController.prototype.__cleanUp.call(this)},e.prototype.isAllowed=function(){return this._ready&&this._allowed},e.prototype.onClick=function(){if(!this._parent.isCRUDAllowed("create"))return c.go("dialog.CRUDCreateNotAllowed",[this.get("sink_name")]);var a=this._parent.getCRUDConfig("create");return a?!b.isBoolean(a)&&a.dialogs?a.dialogs[this.get("role")]?c.go(a.dialogs[this.get("role")]):c.go("dialog.CRUDCreateNotAllowed",[this.get("sink_name")]):void d.open({controller:"allex.data.CreateNewItemController"},{sink_name:this.get("sink_name"),recordDescriptor:this.get("recordDescriptor")}):c.go("dialog.CRUDNoConfig",[this.get("sink_name"),"create"])},e.prototype._onRecordDescriptor=function(a){this._ready=!!a,this._config=null,this._parent.isCRUDAllowed("create")&&(this._config=angular.extend({},f,this._parent.getCRUDConfig("create")||{})),this.$apply()},e.prototype.get_sink_name=function(){return this._parent.sink_name},e.prototype.get_role=function(){return this._parent.get("user").get("role")},e.prototype.get_recordDescriptor=function(){return this._parent.get("recordDescriptor")},{restrict:"E",replace:!0,controller:e,scope:!0,template:'<button class="btn" data-ng-class="_ctrl._config.klass" data-ng-show="_ctrl._ready && _ctrl._config" data-ng-click="_ctrl.onClick()">{{_ctrl._config.label}}</button>'}}]),a.run(["allex.Router","allex.dialog",function(a,b,c){a.register("dialog.CRUDCreateNotAllowed",function(a){return b.error({content:"You are not allowed to do create on sink <strong>{{_ctrl.getData().sink_name}}</strong>",data:{sink_name:a}})}),a.register("dialog.CRUDNoConfig",function(a,c){return b.error({content:"Unable to find configuration for action <strong>{{_ctrl.getData().action}}</strong> for sink <strong>{{_ctrl.getData().sink_name}}",data:{sink_name:a,action:c}})}),a.register("dialog.data.action.edit",function(a,c,d){return b.open({controller:"allex.data.EditController"},{action:a,data:c,view:d})})}]),a.factory("allex.data.EditControllerF",["allex.CRUDAHelpers","allex.lib.form.WaitingUserModalTwoButtonForm",function(a,c){function d(b,d,e){this.view=e.view;var f=this.view.get("recordDescriptor");if(!f.primaryKey)throw new Error("NO PRIMARY KEY ...");this.primaryKey=f.primaryKey;var g=a.buildFormDescriptor(e.view.get("recordDescriptor"),e.data);g.fields[this.get("primaryKey")].attribs={"ng-disabled":"1"},c.call(this,b,d,{settings:{dialog:{messages:{autofade:2e3},success:{autoclose:1e3},title:"Edit","#content":"jsonform"},button_config:{buttons:{save:{cb:this.doSave.bind(this),visible:!1},cancel:{action:"close"}}}},form:g})}return b.inherit(d,c),d.prototype.__cleanUp=function(){this.primaryKey=null,this.view=null,c.prototype.__cleanUp.call(this)},d.prototype.doSave=function(){var a=this.get("primaryKey"),b=this.get("user").getSubSink(this.view.get("sink_name")).sink.call("update",{op:"eq",field:a,value:this.vals[a]},this.vals);this.set("promise",b)},d}]),a.controller("allex.data.EditController",["$scope","$modalInstance","settings","allex.data.EditControllerF",function(a,b,c,d){new d(a,b,c)}])}(angular.module("allex.data"),ALLEX.lib,ALLEX),function(a,b,c){a.directive("allexDataSetitem",["$parse",function(a){return{restrict:"A",scope:!1,link:function(b,c,d){b._ctrl.set("item",a(d.allexDataSetitem)(b))}}}])}(angular.module("allex.data"),ALLEX.lib,ALLEX),function(a,b,c){a.directive("allexDataGrid",["allex.lib.interfaces","$compile","allex.CRUDAHelpers",function(a,c,d){function e(c){b.BasicController.call(this,c),a.Element.call(this),this._parent=c.$parent._ctrl,this._record_descriptor_l=null}return b.inherit(e,b.BasicController),a.Element.addMethods(e),e.prototype.__cleanUp=function(){this._record_descriptor_l.destroy(),this._record_descriptor_l=null,this._parent=null,a.Element.prototype.__cleanUp.call(this),b.BasicController.prototype.__cleanUp.call(this)},e.prototype._doAction=function(a,b,c){this._parent._doAction.call(this._parent,a,b,c.toHash(c.fieldNames()))},e.prototype._doEdit=function(a,b){this._parent._doEdit.call(this._parent,a,b.toHash(b.fieldNames()))},e.prototype._doRemove=function(a){this._parent._doRemove.call(this._parent,a.toHash(a.fieldNames()))},e.prototype.get_data=function(){return this._parent.get("data")},e.prototype.build=function(){this._record_descriptor_l=this._parent.attachListener("recordDescriptor",this.set.bind(this,"recordDescriptor"))},e.prototype.releaseGrid=function(){this.get("el").empty()},e.prototype.set_recordDescriptor=function(a){if(this.releaseGrid(),a){this.gridOptions=this.prepareGridOptions(a),this.gridOptions.data=this._parent.get("data");var b=$("<div>").addClass("allex_grid").attr({"data-ui-grid":"_ctrl.gridOptions"}),d=this.get("el");d.append(b),d.removeClass(),d.addClass("allex_grid_container");var e=this._parent.get("config");e&&(e.autoresize&&b.attr("ui-grid-auto-resize",""),e.container_class&&d.addClass(e.container_class),e.grid_class&&b.addClass(e.grid_class)),c(this.get("el").contents())(this.scope)}},e.prototype.prepareGridOptions=function(a){var b=this._parent.get("config")?this._parent.get("config").grid:null,c=angular.extend({},b),d=c.columnDefs;return c.columnDefs=a.fields.map(this._buildColumnDef.bind(this,d)),this._appendCrudAndActions(c.columnDefs),c},e.prototype._appendCrudAndActions=function(a){var b=d.buildActionsWidget(this._parent);b&&b.length&&a.unshift({name:"Actions",cellTemplate:b})},e.prototype._buildColumnDef=function(a,b){return angular.extend(a&&a[b.name]||{},{displayName:b.title,field:b.name})},{restrict:"E",replace:!0,scope:!0,transclude:!0,controller:e,template:'<div class="allex_grid_container"></div>',link:function(a,b,c){a._ctrl.set("el",b)}}}])}(angular.module("allex.data"),ALLEX.lib,ALLEX),function(a,b,c){var d={no_item:"<strong>Items unavailable</strong>"};a.directive("allexDataList",["$compile",function(a){return{restrict:"E",scope:!1,transclude:!0,template:'<div class="allex_data_list"><div class="empty" data-ng-hide="_ctrl.data.length"></div><ul class="allex_data_list" data-ng-show="_ctrl.data.length"></ul></div>',replace:!0,link:function(b,c,e){var f=b._ctrl.get("config"),g="$litem in _ctrl.data";f.track&&(g+=" track by "+f.track),f.orderBy&&(g+=" | orderBy:'"+f.orderBy+"'"),f.limitTo;var h=f.item,i=$("<li>"+f.item.content+"</li>");i.attr({"data-ng-repeat":g}),i.attr(h.attrs),f.filter&&i.attr({"data-ng-if":f.filter}),f.list&&f.list.attrs&&c.find("ul").attr(f.list.attrs),c.find("ul").append(i),c.find("div.empty").append(f.empty?f.empty:d.no_item),a(c.contents())(b)}}}])}(angular.module("allex.data"),ALLEX.lib,ALLEX),function(a,b,c){a.directive("allexDataCrudNew",["$compile","allex.lib.UserDependentMixIn","allex.Router",function(a,c,d){function e(a){b.BasicController.call(this,a),this.roles=null,this.allowed=!1,this.sink=null,c.call(this,a)}return b.inherit(e,b.BasicController),e.prototype.__cleanUp=function(){this.sink=null,this.allowed=null,this.roles=null,c.prototype.__cleanUp.call(this),b.BasicController.prototype.__cleanUp.call(this)},e.prototype.set_userState=function(a){return c.prototype.set_userState.call(this,a),"loggedin"===a?this.roles?void this.set("allowed",this._isAllowed()):void this.set("allowed",!0):void 0},e.prototype._isAllowed=function(){return this.roles.split(",").indexOf(this.get("user").get("role"))>-1},e.prototype.set_roles=function(a){this.roles=a,this.set("allowed",this._isAllowed()),this.$apply()},e.prototype.set_allowed=function(a){this.allowed=a,this.$apply()},e.prototype.go=function(){this.sink&&this._isAllowed()&&console.log("==============>",this.get("user").getSubSink(this.sink))},{restrict:"E",controller:e,replace:!0,template:'<button class="btn" data-ng-show="_ctrl.allowed" data-ng-click="_ctrl.go()"></button>',link:function(a,b,c){a._ctrl.set("sink",c.sink),c.roles&&c.roles.length&&a._ctrl.set("roles",c.roles),b.html(c.label)}}}]),a.directive("allexDataCrudView",["$compile","allex.AllexViewChild",function(a,c){function d(a){b.BasicController.call(this,a),c.call(this,a),this.config=this.get("data")}return b.inherit(d,b.BasicController),c.addMethods(d),d.prototype.__cleanUp=function(){this.config=null,c.prototype.__cleanUp.call(this),b.BasicController.prototype.__cleanUp.call(this)},{restrict:"E",controller:d,replace:!0,template:'<div class="crudview"></div>',link:function(b,c){var d=$("<allex-data-view>"),e=b._ctrl.get("config"),f={sink:e.sink,name:e.name};d.attr("data-config",JSON.stringify(f)),e.klass&&c.addClass(e.klass),c.append(d),a(c.contents())(b)}}}])}(angular.module("allex.data"),ALLEX.lib,ALLEX);