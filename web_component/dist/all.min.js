!function(a,b,c){a.factory("allex.data.DataMonitorMixIn",["allex.lib.UserDependentMixIn",function(a){function c(b,c){a.call(this,b),this.subsinkPath=c||null,this.data=null,this._ad_usr_state_l=this.get("user").attachListener("state",this._ad_usr_stateChanged.bind(this)),this._mgl=null}return c.prototype.__cleanUp=function(){this._ad_usr_state_l.destroy(),this._ad_usr_state_l=null,this.subsinkPath=null,this.data=null,this._mgl&&this._mgl.destroy(),this._mgl=null},c.prototype._attach_subsink=function(){this.get("subsinkPath")&&this.set_subsink(this.get("user").getSubSink(this.get("subsinkPath")))},c.prototype._ad_usr_stateChanged=function(a){this._attach_subsink()},c.prototype.set_subsinksPath=function(){this._attach_subsink()},c.prototype.set_subsink=function(a){a&&(this.data=a.data,this._mgl=a.monitorDataForGui(this.$apply.bind(this)),this.set("record_descriptor",a.sink.recordDescriptor)),this.$apply()},c.prototype.set_record_descriptor=function(){},c.addMethods=function(a){b.inheritMethods(a,c,"set_subsink","get_data","_ad_usr_stateChanged","set_record_descriptor","set_subsinksPath","_attach_subsink")},c}])}(angular.module("allex.data",["allex.lib","ui.grid","ui.grid.autoResize"]),ALLEX.lib,ALLEX),function(a,b,c){a.factory("allex.data.GridMixIn",["allex.data.DataMonitorMixIn","$compile",function(a,c){function d(b,c,d){d=d||{},this.gridOptions=angular.extend({},e,c),this.gridOptions.data="_ctrl.data",this.renderer='<div class="grid_container" ui-grid="_ctrl.gridOptions"></div>',this.autoresize=d.autoresize||!0,this._ready=!1,a.call(this,b,d.subsinkPath)}var e={enableSorting:!1,minimumColumnSize:150};return d.prototype.__cleanUp=function(){this.renderer=null,this.autoresize=null,this.gridOptions=null,this._ready=null,a.prototype.__cleanUp.call(this)},d.addMethods=function(c){a.addMethods(c),b.inheritMethods(c,d,"set_el","_doRender","set_record_descriptor","set_auto_resize","set_subsinksPath")},d.prototype.set_subsinksPath=function(b){this.get("record_descriptor");this.set("record_descriptor",null),a.prototype.set_subsinksPath.call(this,b)},d.prototype.set_auto_resize=function(a){this.autoresize=a,this._doRender()},d.prototype.set_el=function(a){this.el=a,this._doRender()},d.prototype.set_record_descriptor=function(a){this.gridOptions.columnDefs=this.produceColumnDefs(a),this._ready=!0,this._doRender()},d.prototype._doRender=function(){if(this._ready&&this.el){this.el.empty();var a=$(this.renderer);this.autoresize&&a.attr("ui-grid-auto-resize",""),this.el.append(a),c(this.el.contents())(this.scope)}},d}]),a.directive("allexDataGrid",[function(){return{restrict:"E",transclude:!0,replace:!0,template:'<div class="allexdatagrid"></div>',link:function(a,b){a._ctrl.set("el",b)}}}])}(angular.module("allex.data"),ALLEX.lib,ALLEX),function(a,b,c){a.factory("allex.data.TreeMixIn",["allex.data.DataMonitorMixIn",function(a){function c(b,c,e){this.treeConfig=angular.extend({},d,c),this.treeInstance=null,this.treeData=null,a.call(this,b,e)}var d={core:{multiple:!1,animation:!0,error:function(a){log.error("treeCtrl: error from js tree - "+angular.toJson(a))},check_callback:!0,worker:!0},types:{"default":{icon:"glyphicon glyphicon-flash"},star:{icon:"glyphicon glyphicon-star"},cloud:{icon:"glyphicon glyphicon-cloud"}},version:1,plugins:["types","checkbox"]};return c.prototype.__cleanUp=function(){this.treeConfig=null,this.treeInstance=null,this.treeData=null,a.prototype.__cleanUp.call(this)},c.addMethods=function(d){a.addMethods(d),b.inheritMethods(d,c,"_onTreeReady","_onTreeNodeCreated","_reprocessStructure")},c.prototype._onTreeReady=function(){},c.prototype._onTreeNodeCreated=function(){},c.prototype._reprocessStructure=function(){},c}]),a.directive("allexTree",function(){return{restrict:"E",replace:!0,template:'<div js-tree="_ctrl.treeConfig", ng-model="_ctrl.treeData" tree="_ctrl.treeInstance" tree-events="ready:_ctrl._onTreeReady; create_node:_ctrl._onTreeNodeCreated"></div>'}})}(angular.module("allex.data"),ALLEX.lib,ALLEX);